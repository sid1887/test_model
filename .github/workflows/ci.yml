name: Code Quality and Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  python-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 isort mypy
        pip install -r requirements.txt
    
    - name: Check Python formatting with Black
      run: black --check .
    
    - name: Check Python imports with isort
      run: isort --check-only .
    
    - name: Lint Python code with flake8
      run: flake8 .
    
    - name: Type check with mypy
      run: mypy . --ignore-missing-imports
      continue-on-error: true

  frontend-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Check TypeScript types
      working-directory: ./frontend
      run: npx tsc --noEmit
    
    - name: Lint with ESLint
      working-directory: ./frontend
      run: npx eslint . --ext .js,.jsx,.ts,.tsx
    
    - name: Check formatting with Prettier
      working-directory: ./frontend
      run: npx prettier --check .

  scraper-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: scraper/package-lock.json
    
    - name: Install scraper dependencies
      working-directory: ./scraper
      run: npm ci
    
    - name: Lint with ESLint
      working-directory: ./scraper
      run: npx eslint . --ext .js
    
    - name: Check formatting with Prettier
      working-directory: ./scraper
      run: npx prettier --check .

  integration-tests:
    runs-on: ubuntu-latest
    needs: [python-quality, frontend-quality, scraper-quality]
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cumpair_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run Python tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/cumpair_test
        REDIS_URL: redis://localhost:6379
      run: |
        python -m pytest tests/ -v
      continue-on-error: true
